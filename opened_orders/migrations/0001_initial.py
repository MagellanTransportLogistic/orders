# Generated by Django 5.0.4 on 2024-05-14 13:07

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('main', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderState',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False,
                                          verbose_name='Идентификатор')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Наименование')),
                ('order', models.IntegerField(default=1, unique=True, verbose_name='Порядок сортировки')),
                ('is_processing_order', models.BooleanField(default=False, verbose_name='В работе')),
                ('is_closed_order', models.BooleanField(default=False, verbose_name='Закрыт')),
            ],
            options={
                'verbose_name': 'Статусы заявок',
                'verbose_name_plural': 'Статусы заявок',
                'db_table': 'opened_orders_status',
            },
        ),
        migrations.CreateModel(
            name='OpenedOrder',
            fields=[
                ('uuid',
                 models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='Идентификатор')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата создания')),
                ('load_date', models.DateTimeField(verbose_name='Дата погрузки')),
                ('unload_date', models.DateTimeField(verbose_name='Дата выгрузки')),
                ('vehicle_type', models.CharField(max_length=256, verbose_name='Тип автомобиля')),
                ('cargo_type', models.CharField(default='', max_length=256, verbose_name='Характер груза')),
                ('cargo_weight', models.FloatField(default=0, verbose_name='Вес груза')),
                ('cargo_ext_params',
                 models.CharField(default='', max_length=256, verbose_name='Параметры для нестандартных грузов')),
                ('cargo_price_fixed', models.FloatField(default=0, verbose_name='Стоимость перевозки фиксированная')),
                ('cargo_price_floated',
                 models.FloatField(default=0, verbose_name='Стоимость перевозки ориентировочная')),
                ('comments', models.TextField(default='', null=True, verbose_name='Комментарий')),
                ('ext_upload_city', models.ForeignKey(blank=True, db_column='ext_upload_city', null=True,
                                                      on_delete=django.db.models.deletion.DO_NOTHING,
                                                      related_name='opened_orders_ec', to='main.city',
                                                      verbose_name='Дополнительная выгрузка')),
                ('load_city', models.ForeignKey(db_column='load_city', on_delete=django.db.models.deletion.CASCADE,
                                                related_name='opened_orders_lc', to='main.city',
                                                verbose_name='Город погрузки')),
                ('upload_city', models.ForeignKey(db_column='upload_city', on_delete=django.db.models.deletion.CASCADE,
                                                  related_name='opened_orders_uc', to='main.city',
                                                  verbose_name='Город выгрузки')),
                ('state', models.ForeignKey(db_column='state_uuid', on_delete=django.db.models.deletion.CASCADE,
                                            to='opened_orders.orderstate', verbose_name='Статус заявки')),
            ],
            options={
                'verbose_name': 'Открытые заявки',
                'verbose_name_plural': 'Открытые заявки',
                'db_table': 'opened_orders_list',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='OrderHistory',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False,
                                          verbose_name='Идентификатор')),
                ('record_date', models.DateField(auto_now=True, verbose_name='Дата записи')),
                ('detailed_data', models.TextField(verbose_name='Детальная информация')),
                ('order_uuid', models.ForeignKey(db_column='order_uuid', on_delete=django.db.models.deletion.CASCADE,
                                                 to='opened_orders.openedorder', verbose_name='Заявка')),
                ('order_state', models.ForeignKey(db_column='order_state', on_delete=django.db.models.deletion.CASCADE,
                                                  to='opened_orders.orderstate', verbose_name='Статус заявки')),
            ],
            options={
                'verbose_name': 'Открытые заявки: История',
                'verbose_name_plural': 'Открытые заявки: История',
                'db_table': 'opened_orders_history',
            },
        ),
        migrations.CreateModel(
            name='OrderUserOrganization',
            fields=[
                ('uuid', models.UUIDField(db_column='uuid', default=uuid.uuid4, editable=False, primary_key=True,
                                          serialize=False)),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Наименование')),
                ('chief', models.ForeignKey(db_column='chief', null=True, on_delete=django.db.models.deletion.CASCADE,
                                            to='users.userprofile', verbose_name='Руководитель')),
            ],
            options={
                'verbose_name': 'Организации/Филиалы',
                'verbose_name_plural': 'Организации/Филиалы',
                'db_table': 'order_user_organization',
            },
        ),
        migrations.CreateModel(
            name='OrderUserDepartment',
            fields=[
                ('uuid', models.UUIDField(db_column='uuid', default=uuid.uuid4, editable=False, primary_key=True,
                                          serialize=False)),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Наименование')),
                ('chief', models.ForeignKey(db_column='chief', null=True, on_delete=django.db.models.deletion.CASCADE,
                                            to='users.userprofile', verbose_name='Руководитель')),
                ('organization',
                 models.ForeignKey(db_column='organization', default='0cff60d6-e91b-49a9-aa26-1aa944b95ae6',
                                   on_delete=django.db.models.deletion.CASCADE,
                                   to='opened_orders.orderuserorganization', verbose_name='Организация/Филиал')),
            ],
            options={
                'verbose_name': 'Подразделения',
                'verbose_name_plural': 'Подразделения',
                'db_table': 'order_user_department',
            },
        ),
        migrations.CreateModel(
            name='OrderUserProfile',
            fields=[
                ('uuid', models.UUIDField(db_column='uuid', default=uuid.uuid4, editable=False, primary_key=True,
                                          serialize=False)),
                ('user_id', models.OneToOneField(db_column='user_id', on_delete=django.db.models.deletion.CASCADE,
                                                 to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Профили доступа',
                'verbose_name_plural': 'Профили доступа',
                'db_table': 'order_user_profile',
            },
        ),
        migrations.AddField(
            model_name='openedorder',
            name='author',
            field=models.ForeignKey(db_column='profile_uuid', on_delete=django.db.models.deletion.CASCADE,
                                    related_name='opened_orders_profile_uuid', to='opened_orders.orderuserprofile',
                                    verbose_name='Автор'),
        ),
        migrations.AddField(
            model_name='openedorder',
            name='editor',
            field=models.ForeignKey(db_column='editor_uuid', on_delete=django.db.models.deletion.CASCADE,
                                    related_name='opened_orders_editor_uuid', to='opened_orders.orderuserprofile',
                                    verbose_name='Редактор'),
        ),
        migrations.CreateModel(
            name='OrderUserRole',
            fields=[
                ('uuid', models.UUIDField(db_column='uuid', default=uuid.uuid4, editable=False, primary_key=True,
                                          serialize=False)),
                ('name', models.CharField(db_column='name', max_length=64, unique=True, verbose_name='Имя роли')),
                ('have_access',
                 models.BooleanField(db_column='have_access', default=True, verbose_name='Доступ к системе заявок')),
                ('can_take_orders',
                 models.BooleanField(db_column='can_take_orders', default=False, verbose_name='Принимает заявки')),
                ('can_close_orders',
                 models.BooleanField(db_column='can_close_orders', default=False, verbose_name='Закрывает заявки')),
                ('department', models.ForeignKey(db_column='department', default='c9940d97-0bdc-4d89-8808-7a1c57572816',
                                                 on_delete=django.db.models.deletion.CASCADE,
                                                 to='opened_orders.orderuserdepartment')),
            ],
            options={
                'verbose_name': 'Роли',
                'verbose_name_plural': 'Роли',
                'db_table': 'order_user_role',
            },
        ),
        migrations.AddField(
            model_name='orderuserprofile',
            name='role_id',
            field=models.ForeignKey(db_column='role_uuid', on_delete=django.db.models.deletion.CASCADE,
                                    to='opened_orders.orderuserrole', verbose_name='Роль'),
        ),
    ]
